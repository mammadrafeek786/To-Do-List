import { useState, useEffect } from "react";
import { Trash2, CheckCircle, Plus } from "lucide-react";

export default function TodoApp() {
  const [tasks, setTasks] = useState(() => {
    // Load saved tasks from localStorage
    const saved = localStorage.getItem("tasks");
    return saved ? JSON.parse(saved) : [];
  });

  const [input, setInput] = useState("");

  // Save tasks in localStorage whenever they change
  useEffect(() => {
    localStorage.setItem("tasks", JSON.stringify(tasks));
  }, [tasks]);

  // Add new task
  const addTask = () => {
    if (input.trim() === "") return;
    setTasks([...tasks, { id: Date.now(), text: input, done: false }]);
    setInput("");
  };

  // Toggle done/undone
  const toggleTask = (id) => {
    setTasks(
      tasks.map((task) =>
        task.id === id ? { ...task, done: !task.done } : task
      )
    );
  };

  // Delete task
  const deleteTask = (id) => {
    setTasks(tasks.filter((task) => task.id !== id));
  };

  // Clear all tasks
  const clearAll = () => {
    setTasks([]);
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-r from-indigo-200 via-purple-200 to-pink-200 p-6">
      <div className="w-full max-w-md bg-white shadow-xl rounded-2xl p-6">
        <h1 className="text-3xl font-bold text-center text-indigo-600 mb-6">
          ✅ To-Do List
        </h1>

        {/* Input */}
        <div className="flex mb-4">
          <input
            type="text"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            placeholder="Add a new task..."
            className="flex-grow p-2 rounded-l-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-400"
          />
          <button
            onClick={addTask}
            className="bg-indigo-500 text-white px-4 rounded-r-lg hover:bg-indigo-600 transition"
          >
            <Plus />
          </button>
        </div>

        {/* Task List */}
        {tasks.length === 0 ? (
          <p className="text-center text-gray-500">No tasks yet ✨</p>
        ) : (
          <ul className="space-y-3">
            {tasks.map((task) => (
              <li
                key={task.id}
                className={`flex justify-between items-center p-3 rounded-lg shadow-sm transition ${
                  task.done ? "bg-green-100" : "bg-gray-100"
                }`}
              >
                {/* Toggle Done */}
                <span
                  onClick={() => toggleTask(task.id)}
                  className={`flex items-center gap-2 cursor-pointer ${
                    task.done ? "line-through text-gray-500" : ""
                  }`}
                >
                  <CheckCircle
                    className={`w-5 h-5 ${
                      task.done ? "text-green-500" : "text-gray-400"
                    }`}
                  />
                  {task.text}
                </span>

                {/* Delete */}
                <button
                  onClick={() => deleteTask(task.id)}
                  className="text-red-500 hover:text-red-700"
                >
                  <Trash2 />
                </button>
              </li>
            ))}
          </ul>
        )}

        {/* Clear All Button */}
        {tasks.length > 0 && (
          <button
            onClick={clearAll}
            className="mt-6 w-full bg-red-500 text-white py-2 rounded-lg hover:bg-red-600 transition"
          >
            🗑️ Clear All
          </button>
        )}
      </div>
    </div>
  );
}
